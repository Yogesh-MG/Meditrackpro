# Generated by Django 5.1.7 on 2025-04-13 15:24

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('employees', '0001_initial'),
        ('hospitals', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('make_model', models.CharField(max_length=100)),
                ('manufacture', models.CharField(blank=True, max_length=100, null=True)),
                ('serial_number', models.CharField(max_length=50, unique=True)),
                ('date_of_installation', models.DateField(blank=True, null=True)),
                ('warranty_until', models.DateField(blank=True, null=True)),
                ('asset_number', models.CharField(max_length=50)),
                ('asset_details', models.CharField(choices=[('Excellent', 'Excellent'), ('Poor', 'Poor')], max_length=50, null=True)),
                ('is_active', models.CharField(choices=[('Operational', 'Operational'), ('Needs_Calibration', 'Needs_Calibration'), ('Under_Maintenance', 'Under_Maintenance')], default='Operational', max_length=50, null=True)),
                ('department', models.CharField(blank=True, max_length=50, null=True)),
                ('Room', models.CharField(blank=True, max_length=50, null=True)),
                ('next_calibration', models.DateField(blank=True, null=True)),
                ('qr_code', models.ImageField(blank=True, null=True, upload_to='device_qr_codes/%Y/%m/%d/')),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='devices', to='hospitals.hospital')),
            ],
        ),
        migrations.CreateModel(
            name='Calibration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('calibration_date', models.DateTimeField()),
                ('next_calibration', models.DateField(blank=True, null=True)),
                ('result', models.CharField(blank=True, max_length=50, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('completed', 'Completed'), ('overdue', 'Overdue')], default='scheduled', max_length=20)),
                ('document', models.FileField(blank=True, null=True, upload_to='service_logs/%Y/%m/%d/')),
                ('engineer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='employe_calibration', to='employees.employee')),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='calibrations', to='device.device')),
            ],
        ),
        migrations.CreateModel(
            name='Documentation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document', models.CharField(blank=True, max_length=50, null=True)),
                ('types', models.CharField(blank=True, max_length=50, null=True)),
                ('last_updated', models.DateField(auto_now_add=True)),
                ('storage_location', models.CharField(blank=True, max_length=255, null=True)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documentation', to='device.device')),
            ],
        ),
        migrations.CreateModel(
            name='IncidentReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('incident_type', models.CharField(choices=[('env_fault', 'Environmental Fault'), ('user_fault', 'User Fault'), ('user_knowledge', 'User Lack of Knowledge'), ('user_carelessness', 'User Carelessness'), ('electrical_failure', 'Electrical Failure'), ('comp_failure', 'Component Failure'), ('comp_malfunction', 'Component Malfunction'), ('device_lifetime_end', 'Device Lifetime End'), ('incompatible_component', 'Incompatible Component')], max_length=50)),
                ('incident_date', models.DateTimeField(auto_now_add=True)),
                ('description', models.TextField()),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='incident_reports', to='device.device')),
                ('related_employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='incidents_related', to='employees.employee')),
                ('reported_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='incidents_reported', to='employees.employee')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_date', models.DateField(auto_now_add=True)),
                ('service_type', models.CharField(blank=True, max_length=50, null=True)),
                ('service_details', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('completed', 'Completed'), ('overdue', 'Overdue')], default='scheduled', max_length=20)),
                ('document', models.FileField(blank=True, null=True, upload_to='service_logs/%Y/%m/%d/')),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_logs', to='device.device')),
                ('engineer', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='service_logs', to='employees.employee')),
            ],
        ),
        migrations.CreateModel(
            name='Specification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('power_supply', models.CharField(blank=True, max_length=50, null=True)),
                ('battery_type', models.CharField(blank=True, max_length=50, null=True)),
                ('battery_life', models.CharField(blank=True, max_length=50, null=True)),
                ('weight', models.CharField(blank=True, max_length=50, null=True)),
                ('dimensions', models.CharField(blank=True, max_length=50, null=True)),
                ('conncetivity_options', models.CharField(blank=True, max_length=50, null=True)),
                ('certifications', models.CharField(blank=True, max_length=50, null=True)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='specification', to='device.device')),
            ],
        ),
    ]
