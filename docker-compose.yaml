services:
  db:
    image: postgres:17-alpine
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:  # Add build args
        - RAZORPAY_KEY_ID=${RAZORPAY_KEY_ID}
        - RAZORPAY_KEY_SECRET=${RAZORPAY_KEY_SECRET}
    env_file:
      - .env
    environment:
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DEBUG=${DEBUG}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - TIME_ZONE=${TIME_ZONE}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - RAZORPAY_KEY_ID=${RAZORPAY_KEY_ID}
      - RAZORPAY_KEY_SECRET=${RAZORPAY_KEY_SECRET}
    depends_on:
      - db
    volumes:
      - ./backend:/app
      - static_data:/app/static
    networks:
      - app-network
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    volumes:
      - ./backend/static:/usr/share/nginx/html/static
      - ~/meditrack_certs:/etc/nginx/certs:ro # Mount SSL certificates it's for pi only for local use remove it for deployment
    networks:
      - app-network
    restart: unless-stopped

volumes:
  postgres_data:
  static_data:

networks:
  app-network:
    driver: bridge